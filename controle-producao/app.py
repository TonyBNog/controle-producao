#
# Controle de Produ√ß√£o
#
# Copyright (c) 2025 Sal e Cia
#
# Este trabalho est√° licenciado sob a Creative Commons Atribui√ß√£o-N√£oComercial 4.0 Internacional.
# Para ver uma c√≥pia desta licen√ßa, visite: https://creativecommons.org/licenses/by-nc/4.0/
#
# Voc√™ √© livre para: Compartilhar e Adaptar, sob as condi√ß√µes de Atribui√ß√£o e N√£o Comercial.
#
# O software √© fornecido "como est√°", sem garantia de qualquer tipo, expressa ou impl√≠cita,
# incluindo, mas n√£o se limitando a, garantias de comercializa√ß√£o, adequa√ß√£o a uma finalidade espec√≠fica
# e n√£o infra√ß√£o. Em nenhum caso os autores ou detentores dos direitos autorais ser√£o respons√°veis
# por qualquer reclama√ß√£o, danos ou outra responsabilidade, seja em uma a√ß√£o de contrato, ato il√≠cito
# ou de outra forma, decorrentes de, ou em conex√£o com o software ou o uso ou outras negocia√ß√µes no software.
#

import streamlit as st
from backend import carregar, cadastrar, listar, atualizar, excluir, listar_por_tipo

st.set_page_config(page_title="Controle de Produ√ß√£o", layout="wide")

st.markdown("""
    <style>
        .main {
            background-color: #f8f9fa;
        }
        h1 {
            color: #212529;
        }
    </style>
""", unsafe_allow_html=True)

st.title("üè≠ Controle de Produ√ß√£o")

produtos = carregar()

with st.sidebar:
    st.header("üìã Menu")
    menu = st.radio("Escolha uma op√ß√£o:", [
        "Cadastrar Produto",
        "Listar Todos",
        "Filtrar por Status",
        "Atualizar Status",
        "Excluir Produto",
        "Filtrar por Tipo"
    ])

st.divider()

if menu == "Cadastrar Produto":
    st.subheader("‚ûï Cadastrar Novo Produto")
    col1, col2 = st.columns(2)
    with col1:
        id_ = st.number_input("ID do produto", min_value=1, step=1)
        cor = st.text_input("Cor")
    with col2:
        tam = st.text_input("Tamanho")
        tipo = st.text_input("Tipo")

    if st.button("Cadastrar Produto"):
        try:
            produto = cadastrar(produtos, id_, cor, tam, tipo)
            st.success(f"‚úî Produto cadastrado: {produto}")
        except Exception as e:
            st.error(f"Erro: {e}")

elif menu == "Listar Todos":
    st.subheader("üì¶ Todos os Produtos")
    lista = listar(produtos)
    st.dataframe(lista, use_container_width=True)

elif menu == "Filtrar por Status":
    st.subheader("üîç Filtrar por Status")
    status = st.selectbox("Escolha o status", ['estoque', 'processamento', 'vendido'])
    lista = listar(produtos, status=status)
    st.dataframe(lista, use_container_width=True)

elif menu == "Atualizar Status":
    st.subheader("üìù Atualizar Status de Produto")
    id_ = st.number_input("ID do produto", min_value=1, step=1)
    novo = st.selectbox("Novo status", ['estoque', 'processamento', 'vendido'])
    if st.button("Atualizar Status"):
        if atualizar(produtos, id_, novo):
            st.success("Status atualizado com sucesso!")
        else:
            st.error("Produto n√£o encontrado.")

elif menu == "Excluir Produto":
    st.subheader("üóëÔ∏è Excluir Produto")
    id_ = st.number_input("ID do produto a excluir", min_value=1, step=1)
    if st.button("Excluir"):
        if excluir(produtos, id_):
            st.success("Produto exclu√≠do com sucesso.")
        else:
            st.error("Produto n√£o encontrado.")

elif menu == "Filtrar por Tipo":
    st.subheader("üîç Filtrar por Tipo")
    tipo = st.text_input("Digite o tipo (ex: camiseta, bolsa, etc.):")
    if tipo:
        lista = listar_por_tipo(produtos, tipo)
        st.dataframe(lista, use_container_width=True)
